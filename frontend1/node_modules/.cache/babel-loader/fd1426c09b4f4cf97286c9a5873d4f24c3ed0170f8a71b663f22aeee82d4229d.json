{"ast":null,"code":"var _jsxFileName = \"D:\\\\cod\\\\ChessBlitz\\\\frontend\\\\src\\\\Components\\\\Chessboard.jsx\";\nimport React from 'react';\nimport '../Styles/Chessboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst verticalaxis = [1, 2, 3, 4, 5, 6, 7, 8];\nconst horizontalaxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nexport default function Chessboard() {\n  let board = [];\n  for (let i = verticalaxis.length - 1; i >= 0; i--) {\n    for (let j = 0; j < horizontalaxis.length; j++) {\n      const nr = i + j + 2;\n      if (nr % 2 === 0) {\n        board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tile white-tile\"\n        }, horizontalaxis[j] + verticalaxis[i], false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 27\n        }, this));\n      } else {\n        board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tile black-tile\"\n        }, horizontalaxis[j] + verticalaxis[i], false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 28\n        }, this));\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Chessboard\",\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","verticalaxis","horizontalaxis","Chessboard","board","i","length","j","nr","push","className","fileName","_jsxFileName","lineNumber","columnNumber","id","children","_c","$RefreshReg$"],"sources":["D:/cod/ChessBlitz/frontend/src/Components/Chessboard.jsx"],"sourcesContent":["import React from 'react';\r\nimport '../Styles/Chessboard.css';\r\n\r\nconst verticalaxis = [1,2,3,4,5,6,7,8];\r\nconst horizontalaxis = ['a','b','c','d','e','f','g','h'];\r\n\r\nexport default function Chessboard() {\r\n    let board = [];\r\n    for(let i = verticalaxis.length - 1; i >= 0; i--) {\r\n        for(let j = 0; j < horizontalaxis.length; j++) {\r\n           const nr = i + j + 2;\r\n           if (nr % 2 === 0) {\r\n               board.push(<div key={horizontalaxis[j] + verticalaxis[i]} className='tile white-tile'></div>);\r\n           } else {\r\n                board.push(<div key={horizontalaxis[j] + verticalaxis[i]} className='tile black-tile'></div>);\r\n           }\r\n        }\r\n    }\r\n    return (\r\n        <div id=\"Chessboard\">\r\n            {board}\r\n        </div>\r\n    );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;AACtC,MAAMC,cAAc,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;AAExD,eAAe,SAASC,UAAUA,CAAA,EAAG;EACjC,IAAIC,KAAK,GAAG,EAAE;EACd,KAAI,IAAIC,CAAC,GAAGJ,YAAY,CAACK,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC9C,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,cAAc,CAACI,MAAM,EAAEC,CAAC,EAAE,EAAE;MAC5C,MAAMC,EAAE,GAAGH,CAAC,GAAGE,CAAC,GAAG,CAAC;MACpB,IAAIC,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE;QACdJ,KAAK,CAACK,IAAI,eAACT,OAAA;UAA+CU,SAAS,EAAC;QAAiB,GAAhER,cAAc,CAACK,CAAC,CAAC,GAAGN,YAAY,CAACI,CAAC,CAAC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmC,CAAC,CAAC;MACjG,CAAC,MAAM;QACFV,KAAK,CAACK,IAAI,eAACT,OAAA;UAA+CU,SAAS,EAAC;QAAiB,GAAhER,cAAc,CAACK,CAAC,CAAC,GAAGN,YAAY,CAACI,CAAC,CAAC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmC,CAAC,CAAC;MAClG;IACH;EACJ;EACA,oBACId,OAAA;IAAKe,EAAE,EAAC,YAAY;IAAAC,QAAA,EACfZ;EAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACG,EAAA,GAjBuBd,UAAU;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}