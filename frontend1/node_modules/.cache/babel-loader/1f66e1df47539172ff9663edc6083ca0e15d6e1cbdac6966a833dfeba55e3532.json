{"ast":null,"code":"var _jsxFileName = \"D:\\\\cod\\\\ChessBlitz\\\\frontend\\\\src\\\\Components\\\\Chessboard2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Chessboard } from \"react-chessboard\";\nimport { Chess } from \"chess.js\";\nimport \"../Styles/Chessboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chessboard2() {\n  _s();\n  const [game, setGame] = useState();\n  const [position, setPosition] = useState({\n    a1: \"wR\",\n    a2: \"wP\",\n    a7: \"bP\",\n    a8: \"bR\",\n    b1: \"wN\",\n    b2: \"wP\",\n    b7: \"bP\",\n    b8: \"bN\",\n    c1: \"wB\",\n    c2: \"wP\",\n    c7: \"bP\",\n    c8: \"bB\",\n    d1: \"wQ\",\n    d2: \"wP\",\n    d7: \"bP\",\n    d8: \"bQ\",\n    e1: \"wK\",\n    e2: \"wP\",\n    e7: \"bP\",\n    e8: \"bK\",\n    f1: \"wB\",\n    f2: \"wP\",\n    f7: \"bP\",\n    f8: \"bB\",\n    g1: \"wN\",\n    g2: \"wP\",\n    g7: \"bP\",\n    g8: \"bN\",\n    h1: \"wR\",\n    h2: \"wP\",\n    h7: \"bP\",\n    h8: \"bR\"\n  });\n  const [isWhiteTurn, setIsWhiteTurn] = useState(true);\n  const [promotionSquare, setPromotionSquare] = useState(null); // Track square where promotion happens\n  const [promotingPiece, setPromotingPiece] = useState(null); // Track which piece to promote to\n\n  useEffect(() => {\n    setGame(new Chess());\n  }, []);\n  const onPieceDrop = (sourceSquare, targetSquare) => {\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare\n    });\n    if (move) {\n      setPosition(game.fen());\n      setIsWhiteTurn(!isWhiteTurn);\n    }\n    return move ? true : false;\n  };\n  const onPromotionCheck = (sourceSquare, targetSquare, piece) => {\n    // If the move involves promotion (white pawn on rank 7 to rank 8, or black pawn on rank 2 to rank 1)\n    const isPromotionMove = piece === \"wP\" && targetSquare[1] === \"8\" || piece === \"bP\" && targetSquare[1] === \"1\";\n    if (isPromotionMove) {\n      // Show the promotion options here\n      setPromotionSquare(targetSquare);\n      return true; // Return true indicating promotion\n    }\n    return false; // No promotion needed\n  };\n  const onPromotionPieceSelect = (piece, promoteFromSquare, promoteToSquare) => {\n    // Automatically promote to the selected piece\n    game.move({\n      from: promoteFromSquare,\n      to: promoteToSquare,\n      promotion: piece // 'q' for Queen, 'r' for Rook, 'b' for Bishop, 'n' for Knight\n    });\n    setPosition(game.fen());\n    setIsWhiteTurn(!isWhiteTurn);\n    setPromotingPiece(null);\n    return true;\n  };\n  const handlePromotionSelection = piece => {\n    // Handle user selecting promotion piece (called by some UI control like buttons)\n    if (promotionSquare) {\n      setPromotingPiece(piece);\n      onPromotionPieceSelect(piece, promotionSquare, promotionSquare);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chessboard\",\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      id: \"Basicboard\",\n      position: position,\n      onPieceDrop: onPieceDrop,\n      onPromotionCheck: onPromotionCheck,\n      onPromotionPieceSelect: () => handlePromotionSelection(promotingPiece),\n      showPromotionDialog: false // Manually handle dialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), promotionSquare && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"promotion-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePromotionSelection(\"q\"),\n        children: \"Queen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePromotionSelection(\"r\"),\n        children: \"Rook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePromotionSelection(\"b\"),\n        children: \"Bishop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePromotionSelection(\"n\"),\n        children: \"Knight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Chessboard2, \"XktaApqOUBjMWHBkY+eZHmeL5kc=\");\n_c = Chessboard2;\nvar _c;\n$RefreshReg$(_c, \"Chessboard2\");","map":{"version":3,"names":["React","useEffect","useState","Chessboard","Chess","jsxDEV","_jsxDEV","Chessboard2","_s","game","setGame","position","setPosition","a1","a2","a7","a8","b1","b2","b7","b8","c1","c2","c7","c8","d1","d2","d7","d8","e1","e2","e7","e8","f1","f2","f7","f8","g1","g2","g7","g8","h1","h2","h7","h8","isWhiteTurn","setIsWhiteTurn","promotionSquare","setPromotionSquare","promotingPiece","setPromotingPiece","onPieceDrop","sourceSquare","targetSquare","move","from","to","fen","onPromotionCheck","piece","isPromotionMove","onPromotionPieceSelect","promoteFromSquare","promoteToSquare","promotion","handlePromotionSelection","className","children","id","showPromotionDialog","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/cod/ChessBlitz/frontend/src/Components/Chessboard2.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Chessboard } from \"react-chessboard\";\r\nimport { Chess } from \"chess.js\";\r\nimport \"../Styles/Chessboard.css\";\r\n\r\nexport default function Chessboard2() {\r\n  const [game, setGame] = useState();\r\n  const [position, setPosition] = useState({\r\n    a1: \"wR\", a2: \"wP\", a7: \"bP\", a8: \"bR\",\r\n    b1: \"wN\", b2: \"wP\", b7: \"bP\", b8: \"bN\",\r\n    c1: \"wB\", c2: \"wP\", c7: \"bP\", c8: \"bB\",\r\n    d1: \"wQ\", d2: \"wP\", d7: \"bP\", d8: \"bQ\",\r\n    e1: \"wK\", e2: \"wP\", e7: \"bP\", e8: \"bK\",\r\n    f1: \"wB\", f2: \"wP\", f7: \"bP\", f8: \"bB\",\r\n    g1: \"wN\", g2: \"wP\", g7: \"bP\", g8: \"bN\",\r\n    h1: \"wR\", h2: \"wP\", h7: \"bP\", h8: \"bR\",\r\n  });\r\n  \r\n  const [isWhiteTurn, setIsWhiteTurn] = useState(true);\r\n  const [promotionSquare, setPromotionSquare] = useState(null); // Track square where promotion happens\r\n  const [promotingPiece, setPromotingPiece] = useState(null); // Track which piece to promote to\r\n\r\n  useEffect(() => {\r\n    setGame(new Chess());\r\n  }, []);\r\n\r\n  const onPieceDrop = (sourceSquare, targetSquare) => {\r\n    const move = game.move({ from: sourceSquare, to: targetSquare });\r\n    if (move) {\r\n      setPosition(game.fen());\r\n      setIsWhiteTurn(!isWhiteTurn);\r\n    }\r\n    return move ? true : false;\r\n  };\r\n\r\n  const onPromotionCheck = (sourceSquare, targetSquare, piece) => {\r\n    // If the move involves promotion (white pawn on rank 7 to rank 8, or black pawn on rank 2 to rank 1)\r\n    const isPromotionMove =\r\n      (piece === \"wP\" && targetSquare[1] === \"8\") ||\r\n      (piece === \"bP\" && targetSquare[1] === \"1\");\r\n    \r\n    if (isPromotionMove) {\r\n      // Show the promotion options here\r\n      setPromotionSquare(targetSquare);\r\n      return true; // Return true indicating promotion\r\n    }\r\n    return false; // No promotion needed\r\n  };\r\n\r\n  const onPromotionPieceSelect = (piece, promoteFromSquare, promoteToSquare) => {\r\n    // Automatically promote to the selected piece\r\n    game.move({\r\n      from: promoteFromSquare,\r\n      to: promoteToSquare,\r\n      promotion: piece // 'q' for Queen, 'r' for Rook, 'b' for Bishop, 'n' for Knight\r\n    });\r\n    setPosition(game.fen());\r\n    setIsWhiteTurn(!isWhiteTurn);\r\n    setPromotingPiece(null);\r\n    return true;\r\n  };\r\n\r\n  const handlePromotionSelection = (piece) => {\r\n    // Handle user selecting promotion piece (called by some UI control like buttons)\r\n    if (promotionSquare) {\r\n      setPromotingPiece(piece);\r\n      onPromotionPieceSelect(piece, promotionSquare, promotionSquare);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Chessboard\">\r\n      <Chessboard\r\n        id=\"Basicboard\"\r\n        position={position}\r\n        onPieceDrop={onPieceDrop}\r\n        onPromotionCheck={onPromotionCheck}\r\n        onPromotionPieceSelect={() => handlePromotionSelection(promotingPiece)}\r\n        showPromotionDialog={false} // Manually handle dialog\r\n      />\r\n      {promotionSquare && (\r\n        <div className=\"promotion-options\">\r\n          <button onClick={() => handlePromotionSelection(\"q\")}>Queen</button>\r\n          <button onClick={() => handlePromotionSelection(\"r\")}>Rook</button>\r\n          <button onClick={() => handlePromotionSelection(\"b\")}>Bishop</button>\r\n          <button onClick={() => handlePromotionSelection(\"n\")}>Knight</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}